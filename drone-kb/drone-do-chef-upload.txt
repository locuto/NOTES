=======================================
UPLOAD COOKBOOKS TO CHEF USING DRONE
=======================================
https://github.com/jmccann/drone-chefdk --> for testing the cookbook

https://hub.docker.com/r/jmccann/drone-chef/ --> to publish to chef server
--> https://github.com/jmccann/drone-chef/blob/master/DOCS.md

http://plugins.drone.io/jmccann/chef-supermarket/ --> to publish to internal or public chef-supermarket

Webhooks: Creating: https://developer.github.com/webhooks/creating/
Webhooks: Expose localhost to internet using Ngrok: https://developer.github.com/webhooks/configuring/
NGROK download/install: https://ngrok.com/download

================================================================================
IMPORTANT IMPORTANT IMPORTANT
Use FQDN's everywhere in URLs etc - for drone, gitlab, chef servers
Add non-default ports specifically to URLs
================================================================================

========================================
URLS
========================================

-----------
CHEF SERVER
-----------
https://olx0003:443

user g
pw t13

organization 'test1'

-----
DRONE
-----
http://olx0003.hq.company.com:8080 (or http://olx003:8090, not preferred as docker containers cannot recognize non-fqdn)

Drone token for the user:  Logon to drone --> account --> show token
--> it is a long string like: 
sdsfdsf3dsf.eyJ0ZXh0IjoiZ293cmlzaCIsInR5cGUiOiJ1c2VyIn0.k5VAOJCiReC295XJr6ugJj7PtbcImqjOVNM5HbWCGqU

------
GITLAB
------
http://olx0003.hq.company.com:8090 (or http://olx003:8090, not preferred as docker containers cannot recognize non-fqdn)
user g (or g.m.t.c)
pw t13

repo - gwrsh/myproject1

=============================
SETUP CICD on WORKSTATION
FOR GITLAB PROJECT
=============================

GOAL: Push to gitlab repo gwrsh/myproject1 should be deployed to test1 org in chef-server

THESE STEPS ARE TO BE DONE ON WORKSTATION - NOT DRONE SERVER (THOUGH CAN BE DONE THERE)

---------------------------------
- Working folder 
---------------------------------
/mywork/drone-cicd/gitlab-projects

------------------------------------------------------
- Clone the cookbook
------------------------------------------------------
git clone ... ...

------------------------------------------------------
- Create .drone.yml for deployment pipeline/build definition
------------------------------------------------------
NOTE: Create this file in the root directory of the cookbook
NOTE: DO NOT add this file in .gitignore - this file also must be pushed to git

- .drone.yml IF USING DRONE:0.6 ONWARDS

pipeline:
  test:
    image: jmccann/drone-chefdk:1.2.22
    when:
      #event: pull_request
      event: [ pull, push, tag ]
    commands:
      - echo "Testing"
      - rubocop --only Syntax
  deploy:
    image: jmccann/drone-chef:0.5
    pull: true
    when:
      event: push
      branch: master
    user: gwrsh
    secrets: [ CHEF_PRIVATE_KEY ]
    server: https://olx0003.hq.company.com:443
    org: test1
    ssl_verify: false                


- .drone.yml IF USING DRONE:0.5

#If you update this file don't forget to sign it via DRONE-CLI:
#drone sign <orgname>/<cookbookname>
#
#
pipeline:
  test:
    image: jmccann/drone-chefdk:1.2.22
    when:
      #event: pull_request
      event: [ pull, push, tag ]
    commands:
      - echo "Testing"
      - rubocop --only Syntax
  deploy:
    image: jmccann/drone-chef:0.5
    pull: true
    when:
      event: push
      branch: master
    user: ${CHEF_USER}
    private_key: ${CHEF_USER_PRIVATE_KEY}
    server: https://oralx0003.hq.company:443
    org: test1
    #berks_files:
      #- Berksfile
    ssl_verify: false
    
------------------------------------------
- Environment file - drone-env-olx003.env
------------------------------------------
export DRONE_SERVER=http://olx0003.hq.company.com:8080 # (or http://olx003:8090, not preferred as docker containers cannot recognize non-fqdn)
export DRONE_TOKEN=eyJdsfsf13dsbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZXh0IjoiZ29.....

------------------------------------------------------------------
- Test drone-cli with drone server and token
------------------------------------------------------------------
. ./drone-env-olx0003.env

drone info
drone repo ls
drone repo info gwrsh/myproject1
drone repo info test/testproject1

---------------------------------------------------------------------------------------------------
- Get the latest drone-chef docker image (on drone host where docker is running)
- MAY NOT BE A REQUIRED STEP - as this will be dynamically pulled
---------------------------------------------------------------------------------------------------
# docker pull jmccann/drone-chef:0.5

---------------------------------------------------------------------------------------------------
- Add chef server username as a drone secret - for the repo (on workstation)
---------------------------------------------------------------------------------------------------
NOTE: Secrets are treated differently in Drone 0.5, and 0.6/0.7
NOTE: In drone:0.6 onwards, drone-chef plugin takes 'user' (for chef server) as hardcoded like user: myusername 
      and CHEF_PRIVATE_KEY as a secret and no reference to private_key is required in .drone.yml
NOTE: In drone:0.5, both user and key can be probably secrets referenced as user: ${USER_SECRET},  
      private_key: ${PRIVATE_KEY_SECRET} --> any name for secret is fine

DECIDE BASED ON NOTES ABOVE NOTES

. ./drone-env-olx0003.env
drone secret add --conceal --image=jmccann/drone-chef:0.5 gwrsh/myproject1 CHEF_USER gwrsh

NOTE: gwrsh/myproject1 is the gitlab repo - not the chef-server org-repo

---------------------------------------------------------------------------------------------------
- Add chef server user's private key as a drone secret - for the repo (on workstation)
---------------------------------------------------------------------------------------------------
NOTE: In drone:0.6 onwards, drone-chef plugin takes 'user' (for chef server) as hardcoded like user: myusername 
      and CHEF_PRIVATE_KEY (must be this name) as a secret and no reference to private_key is required in .drone.yml
NOTE: In drone:0.5, both user and key can be probably secrets referenced as user: ${USER_SECRET},  
      private_key: ${PRIVATE_KEY_SECRET} --> any name for secret is fine
NOTE: gwrsh/myproject1 is the gitlab repo - not the chef-server org-repo

. ./drone-env-olx0003.env
drone secret add --conceal --image=jmccann/drone-chef:0.5 gwrsh/myproject1 CHEF_USER_PRIVATE_KEY /u01/mywork/drone-cicd/gwrsh-chef-olx003-key.pem

---------------------------------------------------------------------------------------------------
- Sign the gitlab repo into drone (on workstation)
---------------------------------------------------------------------------------------------------
NOTE: Sign is not required in drone:0.6 onwards
NOTE: The sig file produced also should be pushed to git-repo of the cookbook

drone sign gwrsh/myproject1

---------------------------------------------------------------------------------------------------
- Push the cookbook to git
---------------------------------------------------------------------------------------------------

git add .
git commit -m "commit message"
git push origin master

---------------------------------------------------------------------------------------------------
WATCH THE BUILD AND ANY ERRORS IN DRONE WEB UI
---------------------------------------------------------------------------------------------------
Go to the specific cookbook in Drone web-ui
Click on the setting 'gear' image
Choose the build on the left hand vertical pane
Watch the steps progress on the right hand pane

--> Also on the drone host do 'docker logs -f container-id' to view the logs to get more insight to setup errors

---------------------------------------------------------------------------------------------------
VERIFY IN CHEF SERVER
---------------------------------------------------------------------------------------------------
Verify in chef server org upon build completion whether the cookbook has been uploaded alright

= = = = = = = = = = = = = = = = =
OLD NOTES BELOW
= = = = = = = = = = = = = = = = =
====================
CREATE A COOKBOOK
====================
berks cookbook drone-chef-upload-test1

====================
CREATE .DRONE.YML
====================
Create .drone.yml in the base directory of the cookbook

pipeline:
  test:
    image: jmccann/drone-chefdk:1.2.22
    when:
      event: pull_request
    commands:
      - echo "Testing"
      - rubocop --only Syntax

  upload:
    image: jmccann/drone-chef-supermarket:1
    pull: true
    when:
      event: push
      branch: master
    user: ${CHEF_USERNAME}
    private_key: ${CHEF_PRIV_KEY}
    server: https://devops1
    ssl_verify: false

  deploy:
    image: jmccann/drone-chef:2
    pull: true
    when:
      event: push
      branch: master
    user: ${CHEF_USERNAME}
    private_key: ${CHEF_PRIV_KEY}
    server: https://devops1
    org: test1
    berks_files:
      - Berksfile
    ssl_verify: false

======================
SET ENVIRONMENT
======================
export DRONE_HOST=<host where drone is running - not required for the current purpose>
export DRONE_SECRET=dronesecret123 (or other secret given during drone install)
export DRONE_GITHUB_CLIENT=<github client created for the given drone installation>
export DRONE_GITHUB_SECRET=<github secret created for the given drone installation>
export DRONE_SERVER=http://localhost:80
export DRONE_TOKEN=<token gotten from drone>

====================
ADD SECRET
====================

TBD - these steps need to be tested yet 

The user of chef-user.pem should have read-write/admin access to the organization mentioned in drone.yml.

•	drone secret add --image=jmccann/drone-chef:2 <git org name>/drone-chef-upload-test1 CHEF_PRIV_KEY @/Users/laptopusername/C/keys/Chef-Keys-OwnChef/user-validator-chef-vagrantVm-devops1-username.pem

•	drone secret add --conceal --image=jmccann/drone-chef:2 <git org name>/<cookbookname> CHEF_USERNAME the_chef_username
--> alternatively, set the environment CHEF_USERNAME

•	drone sign <git org name>/<cookbookname>

•	git add .
•	git commit -m “cookbok to use drone now on”
•	git push origin <branch>

= = = = = =
RAW NOTES
= = = = = =
#If you update this file don't forget to sign it via DRONE-CLI:
#drone sign <orgname>/<cookbookname>
#
#Check the Drone execution logs here:
#https://drone5server.x.com

pipeline:
  deploy:
    image: drone.docker.ttt.com/drone-chef:2
    pull: true
    when:
      event: push
      branch: master
    user: ${CHEF_USER}
    private_key: ${CHEF_USER_PRIVATE_KEY}
    server: https://olx0003:443
    org: test1
    #berks_files:
      #- Berksfile
    ssl_verify: false
$ drone secret --conceal --image=drone.docker.ttt.com/drone-chef:2 gwrsh/test1 CHEF_USER_PRIVATE_KEY /Users/myusername/c/keys/Chef-Keys-OwnChef/user-validator-chef-olx0003-gwrsh.pem
Incorrect Usage.

