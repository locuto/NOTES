===================================
CLIENT, DOCKER, RUNNER MACHINE
===================================
Install the following to perform client, ansible job-runs, consul/vault management, docker containers

- Git
- Ansible
- Docker
- Consul
- Consul-template
- Vault (Hashicorp)
- Helm
- kubectl
- AWS client (aws)
- Bifrost
- Gardenia
- Spinnaker

==============================
INSTALL ALL
==============================
This was done on a Centos7 Vbox VM

----------------------
YUM SETUP
----------------------
# yum install epel-release
# yum update

---------------------
GIT
---------------------
Git came with the os as /usr/bin/git

---------------------
ANSIBLE
---------------------
NOTE: Did not need to add ansible-yum-repo

# yum install ansible
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos-hn.viettelidc.com.vn
 * epel: ftp.jaist.ac.jp
 * extras: centos.excellmedia.net
 * updates: centos.excellmedia.net
 ...
 ...
 
 Following were installed:
 /usr/bin/ansible
 /usr/bin/ansible-playbook
 /usr/bin/ansible-vault
 ...
 ... and all other stuff 
 
-----------------
DOCKER
-----------------
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-centos-7
  
# curl -fsSL https://get.docker.com/ | sh
# systemctl start docker
# systemctl status docker
# systemctl enable docker

- SCREEN OUTPUT OF INSTALLER
etadata Cache Created
+ sh -c 'yum install -y -q docker-ce'
warning: /var/cache/yum/x86_64/7/docker-ce-edge/packages/docker-ce-18.09.3-3.el7.x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID 621e9f35: NOKEY
Public key for docker-ce-18.09.3-3.el7.x86_64.rpm is not installed
Importing GPG key 0x621E9F35:
 Userid     : "Docker Release (CE rpm) <docker@docker.com>"
 Fingerprint: 060a 61c5 1b55 8a7f 742b 77aa c52f eb6b 621e 9f35
 From       : https://download.docker.com/linux/centos/gpg
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker your-user

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.

** DOCKER ENGINE - ENTERPRISE **

If youâ€™re ready for production workloads, Docker Engine - Enterprise also includes:

  * SLA-backed technical support
  * Extended lifecycle maintenance policy for patches and hotfixes
  * Access to certified ecosystem content

** Learn more at https://dockr.ly/engine2 **

ACTIVATE your own engine to Docker Engine - Enterprise using:

  sudo docker engine activate

-------------------
CONSUL
-------------------
https://learn.hashicorp.com/consul/getting-started/install.html
https://www.consul.io/downloads.html

# curl -O https://releases.hashicorp.com/consul/1.4.2/consul_1.4.2_linux_amd64.zip
# unzip consul_1.4.2_linux_amd64.zip
# mv consul /usr/local/bin

-------------------
CONSUL-TEMPLATE
-------------------
https://www.consul.io/docs/guides/consul-template.html
https://releases.hashicorp.com/consul-template/ (downloads)

# wget https://releases.hashicorp.com/consul-template/0.20.0/consul-template_0.20.0_linux_amd64.zip
# unzip consul-template_0.20.0_linux_amd64.zip
# mv consul-template /usr/local/bin

-------------------
VAULT
-------------------
https://learn.hashicorp.com/vault/getting-started/install
https://www.vaultproject.io/downloads.html

# wget https://releases.hashicorp.com/vault/1.0.3/vault_1.0.3_linux_amd64.zip
# unzip vault_1.0.3_linux_amd64.zip
# mv vault /usr/local/bin

-------------------
HELM
-------------------
https://helm.sh/
https://github.com/helm/helm
https://github.com/helm/helm/releases/tag/v2.13.0

# wget https://storage.googleapis.com/kubernetes-helm/helm-v2.13.0-linux-amd64.tar.gz
# tar xvfpz helm-v2.13.0-linux-amd64.tar.gz
# mv */helm /usr/local/bin
# mv */tiller /usr/local/bin

-------------------
KUBECTL
-------------------
https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-binary-using-curl

# curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
# chmod +x kubectl
# mv kubectl /usr/local/bin

-------------------
AWS CLI
-------------------
https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html

- PIP
# yum install python-pip  (if using python 2.x)
This will install /usr/bin/pip

- AWS
# pip3 install awscli
OR
# pip install awscli

This will install /usr/bin/aws

-------------------
BIFROST
-------------------
TBD
https://docs.openstack.org/bifrost/latest/install/index.html

