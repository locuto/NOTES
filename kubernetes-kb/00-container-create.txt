==================================
CREATING CONTAINERS
==================================

Based on:
    https://linuxthegreat.wordpress.com/2017/10/17/installing-kubernetes-1-8-1-on-centos-7/
    http://containertutorials.com/get_started_kubernetes/k8s_example.html

https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/

Playgrounds:
https://www.katacoda.com/courses/kubernetes/playground
https://labs.play-with-k8s.com/



===========================
NGINX FROM https://linuxthegreat.wordpress.com/2017/10/17/installing-kubernetes-1-8-1-on-centos-7/
===========================
NOTE: THIS FAILED - details below

----------------------
CREATE YAML nginx.yaml
----------------------
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 2
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        
----------------------
CREATE IT
----------------------
# kubectl create -f nginx.yaml

# kubectl get pods
NAME                     READY   STATUS    RESTARTS   AGE
nginx-85c8f76bb5-df77c   1/1     Running   0          3m
nginx-85c8f76bb5-dqsr4   1/1     Running   0          3m

# kubectl get deployments
NAME    DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
nginx   2         2         2            2           3m30s

--------------------------------------------
EXPOSE PORT - 'WITHIN' THE CLUSTER
--------------------------------------------
Note: This command will create service with the name “nginx-service”. 
Service will be accessible on the port given by “–port” option for the “–target-port”. 
Target port will be of pod. Service will be accessible within the cluster only. 
In order to access it using your host IP “NodePort” option will be used.

# kubectl expose deployment nginx-deployment –-name=nginx-service –-port=80 –-target-port=80 –-type=NodePort

# kubectl get svc
NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP   153m
nginx        ClusterIP   10.104.227.129   <none>        80/TCP    2m59s

- CONNECT

# curl cluster-ip port
# curl 10.104.227.129 80
--> TBD - This just hung and timed out

# curl node-ip port
--> Here we give ip of the node itself
--> TBD - connection refused
[root@k0 k8]# curl 192.168.11.10 80
curl: (7) Failed connect to 192.168.11.10:80; Connection refused
curl: (7) Failed to connect to 0.0.0.80: Invalid argument
[root@k0 k8]# curl http://192.168.11.10:80
curl: (7) Failed connect to 192.168.11.10:80; Connection refused


--------------------------------------------
REMOVE SERVICE
--------------------------------------------
# kubectl delete service nginx
service "nginx" deleted

# kubectl delete deployment nginx
deployment.extensions "nginx" deleted

----------------------
VERIFY
----------------------

On nodes:
# docker ps |grep ngin
fead827c5d51        nginx                  "nginx -g 'daemon of…"   9 minutes ago       Up 9 minutes                            k8s_nginx_nginx-85c8f76bb5-df77c_default_ea105e8c-f220-11e8-b2d7-080027104420_0
45f39e64f72b        k8s.gcr.io/pause:3.1   "/pause"                 10 minutes ago      Up 10 minutes                           k8s_POD_nginx-85c8f76bb5-df77c_default_ea105e8c-f220-11e8-b2d7-080027104420_0


=======
TRIAL2 - POD AND SERVICE WITH NODEPORT
=======
kubectl create ns nginx-ns
kubectl run --namespace=nginx-ns nginx1 --replicas=2 --image=nginx
kubectl get pods -o wide -n nginx-ns
kubectl expose deployment nginx1 -n nginx-ns --name=nginx-service --port=80 --target-port=80 --type=NodePort

- PODS

NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE   IP               NODE   NOMINATED NODE   READINESS GATES
nginx-ns      nginx1-6d85b46d7-rnrmq                     1/1     Running   0          10s   172.16.241.84    kx01   <none>           <none>
nginx-ns      nginx1-6d85b46d7-t67zr                     1/1     Running   0          10s   172.16.83.200    kx02   <none>           <none>

- SERVICE
NAMESPACE     NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE     SELECTOR
nginx-ns      nginx-service   NodePort    10.105.255.246   <none>        80:30232/TCP    2m13s   run=nginx1

- CONNECT TO NGINX
-- from master
curl <pod ip1> 80  --> ok
curl <pod ip2> 80  --> ok
curl <cluster ip of service> 80 --> ok

curl <node1 ip> 80 --> error
curl <node1 ip> 30232 --> error

-- from node1
curl <pod ip1> 80  --> ok
curl <pod ip2> 80  --> ok
curl <cluster ip of service> 80 --> ok

curl <node1 ip> 80 --> error
curl <node1 ip> 30232 --> error

Per https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/
--> service should exist before pods
Otherwise, the pod environment will not contain the service

- POD ENVIRONMENT AS OF NOW
# kubectl exec  nginx1-6d85b46d7-t67zr -n nginx-ns -- printenv | grep SERVICE
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
 
- STOP AND START PODS
# kubectl scale deployment nginx1 -n nginx-ns --replicas=0; kubectl scale deployment nginx1 -n nginx-ns --replicas=2;

[root@kx00 nginx_pod]# kubectl exec  nginx1-6d85b46d7-gr7z5 -n nginx-ns -- printenv | grep SERVICE
KUBERNETES_SERVICE_PORT=443
NGINX_SERVICE_PORT=tcp://10.105.255.246:80
NGINX_SERVICE_PORT_80_TCP_PORT=80
NGINX_SERVICE_PORT_80_TCP=tcp://10.105.255.246:80
NGINX_SERVICE_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
NGINX_SERVICE_SERVICE_PORT=80
KUBERNETES_SERVICE_PORT_HTTPS=443
NGINX_SERVICE_SERVICE_HOST=10.105.255.246
NGINX_SERVICE_PORT_80_TCP_ADDR=10.105.255.246

[root@kx00 nginx_pod]# curl 192.168.11.111 30232
curl: (7) Failed connect to 192.168.11.111:80; Connection refused
curl: (7) Failed to connect to 0.0.118.24: Invalid argument
