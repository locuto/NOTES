====================================
SECRETS, SERVICE ACCOUNTS, KUBECTL
====================================

A 'default' service account exists with most privileges.
Other service accounts are also created with specific privileges.
Each service account will have a secret.
If a pod is assigned a service account that secret will be 'mounted'.
--> And, if that pod has kubectl command in it, then it will get access as per the service account's privileges

The 'default' service account gets attached to a pod always


================
NAMESPACE-SECRET
================
- NAMESPACE
kubectl get ns |grep monitor-ns
monitor-ns                        Active    34d

- SERVICE ACCOUNT - same name as the namespace name
kubectl get sa --all-namespaces |grep monitor
monitor-ns                       default  

- SECRET - for the namespace - secret name is 'default'
kubectl get sa -n monitor-ns -o wide
NAME      SECRETS   AGE
default   1         34d

- TOKEN FOR THE NAMESPACE-SECRET
kubectl describe secret -n k8s-monitoring-dc
Name:         default-token-vcwlk
Namespace:    monitor-ns
Labels:       <none>
Annotations:  kubernetes.io/service-account.name=default
              kubernetes.io/service-account.uid=abcd81a7-8dab-12e9-86b4-52542432342

Type:  kubernetes.io/service-account-token

Data
====
ca.crt:     2187 bytes
namespace:  17 bytes
token:      eyJhbGciOiJSUzI1lksdfjsflksjflslmcxnlxjcflksdmf ....lksjflsj


- STORE IT IN A SECRET

Store a secret if necessary, in Drone
secret/shared/Kubernetes/Tokens/cluster_name_namespace_name
Example:
secret/shared/Kubernetes/Tokens/prod_east_monitor_ns

NOTE: 'token' value is the token gottne above
Content: (start from apiVersion: onwards)
INFO: The 'repo' is the Drone repo to which this applies

INFO[0002] Data:                                        
INFO[0002] -----                                        
INFO[0002]   repo: Kubernetes/*                         
INFO[0002]   value: apiVersion: v1

kind: Config
preferences: {}

clusters:
- cluster:
    certificate-authority: /usr/local/share/ca-certificates/tgt-ca-bundle.crt
    server:  https://kubeapi.prod.xyz.core.kubernetes.company.com --> this is the kube API server
  name: monitor-ns

users:
- name: monitor-ns
  user:
    token: ksdf;skf;skf;skdf;sadfs;fsd;fmsvmxclvjspfwa';kflmspi0q9ieqp

contexts:
- context:
    cluster: monitor-ns
    namespace: monitor-ns
    user: monitor-ns
  name: monitor-ns
current-context: monitor-ns

- USE IT IN A ~/.kube/config

Get the above 'Config' and place it in ~/.kube/config
Run kubectl and it should take you to the right cluster and namespace

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OLD NOTES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=====
BRIEF
=====
- LIST SERVICE ACCOUNTS
# kubectl get sa -n kube-system
NAME                                 SECRETS   AGE
...
default                              1         120d
...
other1                               1         120d
other2 ... ...
...
...

# kubectl get secret -n kube-system |grep generic-garbage-collector
something-token-9jg2h            kubernetes.io/service-account-token   3      120d

- SECRET IN A POD THAT HAS KUBECTL (similary you can check in other pods also)
Note: Assume that this is in kube-system and got 'default' SA's secret

# kubectl exec kubectl_pod-abcd123-565wc -n kube-system -ti  /bin/sh
/app # 
/app # kubectl get pods --all-namespaces

/app # cat /var/run/secrets/kubernetes.io/serviceaccount/token
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJl
...
...

========
DETAILS
========
- EVERY NAMESPACE HAS A 'DEFAULT' SERVICE ACCOUNT
[root@kx00 ~]# kubectl get sa --all-namespaces
NAMESPACE     NAME                                 SECRETS   AGE
default       default                              1         105d
kube-public   default                              1         105d
kube-system   attachdetach-controller              1         105d
kube-system   bootstrap-signer                     1         105d
kube-system   calico-kube-controllers              1         105d
kube-system   calico-node                          1         105d
kube-system   certificate-controller               1         105d
kube-system   clusterrole-aggregation-controller   1         105d
kube-system   coredns                              1         105d
kube-system   cronjob-controller                   1         105d
kube-system   daemon-set-controller                1         105d
kube-system   default                              1         105d
kube-system   deployment-controller                1         105d
kube-system   disruption-controller                1         105d
kube-system   endpoint-controller                  1         105d
kube-system   expand-controller                    1         105d
kube-system   generic-garbage-collector            1         105d
kube-system   horizontal-pod-autoscaler            1         105d
kube-system   job-controller                       1         105d
kube-system   kube-proxy                           1         105d
kube-system   namespace-controller                 1         105d
kube-system   node-controller                      1         105d
kube-system   persistent-volume-binder             1         105d
kube-system   pod-garbage-collector                1         105d
kube-system   pv-protection-controller             1         105d
kube-system   pvc-protection-controller            1         105d
kube-system   replicaset-controller                1         105d
kube-system   replication-controller               1         105d
kube-system   resourcequota-controller             1         105d
kube-system   service-account-controller           1         105d
kube-system   service-controller                   1         105d
kube-system   statefulset-controller               1         105d
kube-system   token-cleaner                        1         105d
kube-system   ttl-controller                       1         105d
monitoring    default                              1         23d
nginx-ns      default                              1         105d

