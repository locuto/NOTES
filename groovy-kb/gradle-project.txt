Groovy project with gradle:
(also has test cases)
https://gradle.org/guides/
--> https://guides.gradle.org/building-groovy-libraries/ --> USE THIS

Groovy plugin for gradle:
https://docs.gradle.org/current/userguide/groovy_plugin.html
https://www.tutorialspoint.com/gradle/gradle_build_a_groovy_project.htm

=======================
GROOVY-GRADLE PROJECT
=======================
https://guides.gradle.org/building-groovy-libraries/

Note: Gradle 5.6.4 was used for this

NOTE: The document is for developing a 'library' - so asks to choose '3' in the "type of project" option
      However, I chose 2 to create an appliction project

-------------------
INITIALIZE
-------------------
mkdir demo
cd demo

$ gradle init

Welcome to Gradle 5.6.4!

Here are the highlights of this release:
 - Incremental Groovy compilation
 - Groovy compile avoidance
 - Test fixtures for Java projects
 - Manage plugin versions via settings script

For more details see https://docs.gradle.org/5.6.4/release-notes.html

Starting a Gradle Daemon (subsequent builds will be faster)

Select type of project to generate:
  1: basic
  2: application
  3: library
  4: Gradle plugin
Enter selection (default: basic) [1..4] 2

Select implementation language:
  1: C++
  2: Groovy
  3: Java
  4: Kotlin
  5: Swift
Enter selection (default: Java) [1..5] 2

Select build script DSL:
  1: Groovy
  2: Kotlin
Enter selection (default: Groovy) [1..2] 1

Project name (default: demo): 
Source package (default: demo): 

> Task :init
Get more help with your project: https://docs.gradle.org/5.6.4/userguide/tutorial_groovy_projects.html

BUILD SUCCESSFUL in 3m 12s
2 actionable tasks: 2 executed

- BUILD.GRADLE FILE

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.7'

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

application {
    // Define the main class for the application
    mainClassName = 'demo.App'
}

- SOURCE FOLDERS CREATED
$ ls -lR src
total 0
drwxr-xr-x  4 username  myDomain Users  128 Apr 13 10:56 main
drwxr-xr-x  4 username  myDomain Users  128 Apr 13 10:56 test

src/main:
total 0
drwxr-xr-x  3 username  myDomain Users  96 Apr 13 10:56 groovy
drwxr-xr-x  2 username  myDomain Users  64 Apr 13 10:56 resources

src/main/groovy:
total 0
drwxr-xr-x  3 username  myDomain Users  96 Apr 13 10:56 demo

src/main/groovy/demo:
total 8
-rw-r--r--  1 username  myDomain Users  246 Apr 13 10:56 App.groovy

src/main/resources:

src/test:
total 0
drwxr-xr-x  3 username  myDomain Users  96 Apr 13 10:56 groovy
drwxr-xr-x  2 username  myDomain Users  64 Apr 13 10:56 resources

src/test/groovy:
total 0
drwxr-xr-x  3 username  myDomain Users  96 Apr 13 10:56 demo

src/test/groovy/demo:
total 8
-rw-r--r--  1 username  myDomain Users  340 Apr 13 10:56 AppTest.groovy

src/test/resources:

- GRADLE STUFF
-rw-r--r--  1 username  myDomain Users  1017 Apr 13 10:56 build.gradle
drwxr-xr-x  3 username  myDomain Users    96 Apr 13 10:53 gradle
-rwxr-xr-x  1 username  myDomain Users  5960 Apr 13 10:53 gradlew
-rw-r--r--  1 username  myDomain Users  2942 Apr 13 10:53 gradlew.bat
-rw-r--r--  1 username  myDomain Users   353 Apr 13 10:56 settings.gradle

----------------------
APP FILES AUTO-CREATED (demo-setup by gradle itself)
----------------------

- src/main/groovy/demo/App.groovy

/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package demo

class App {
    String getGreeting() {
        return 'Hello world.'
    }

    static void main(String[] args) {
        println new App().greeting
    }
}

- test/groovy/demo/AppTest.groovy

package demo

import spock.lang.Specification

class AppTest extends Specification {
    def "application has a greeting"() {
        setup:
        def app = new App()

        when:
        def result = app.greeting

        then:
        result != null
    }
}

- demo/.gitignore
# Ignore Gradle project-specific cache directory
.gradle

# Ignore Gradle build output directory
build

----------------------
IMPORT INTO INTELLIJ
----------------------
New --> Project from existing sources --> choose the 'demo' folder
In the ensuing window --> "import project from external model" --> choose 'gradle'
Click finish
In the ensuing window --> choose "new window" - so that it shows up in a different window than any open project window

Then, Intellij again downloads gradle 5.6.4 for some reason
And finishes setup

Click on 'external libraries' and you can see libraries brought in by gradle based on dependencies in build.gradle

----------------------
BUILD
----------------------
$ cd 'demo'
$ gradlew build

This creates the zip and tar files in demo/build/distributions

Untar or unzip one of them
That will create a directory helloapp with many other folders
Run helloapp/bin/helloapp --> that will output "Hello world."
