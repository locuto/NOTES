========================================
AWX INSTALL ON DOCKER ON CENTOS
========================================

https://www.systemmen.com/devops/ansible/install-ansible-awx-on-centos-7-187.html

- PREP
(TBD)
# sed -i 's|SELINUX=enforcing|SELINUX=disabled|g' /etc/selinux/config
# setenforce 0
# yum -y install git gcc gcc-c++ lvm2 bzip2 gettext nodejs yum-utils device-mapper-persistent-data ansible python-pip
# yum -y remove docker docker-common docker-selinux docker-engine
# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
# yum -y install docker-ce
# systemctl start docker && systemctl enable docker
# pip install -U docker-py
# pip show docker-py

- CLONE THE AWX REPO
# git clone --depth 50 https://github.com/ansible/awx.git

# cd awx/installer/

- MODIFY awx/installer/inventory

Possibly, set host_port to something other than 80 - so that nginx reverse-proxy can use 80
host_port=8052
#host_port=80

- INSTALL 

[root@awxoel1 installer]# ansible-playbook -i inventory install.yml

PLAY [Build and deploy AWX] **************************************************************************************************************

TASK [check_vars : include_tasks] ********************************************************************************************************
skipping: [localhost]

TASK [check_vars : include_tasks] ********************************************************************************************************
included: /root/awx/github/awx/installer/roles/check_vars/tasks/check_docker.yml for localhost

TASK [check_vars : postgres_data_dir should be defined] **********************************************************************************
ok: [localhost] => {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [check_vars : host_port should be defined] ******************************************************************************************
ok: [localhost] => {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [image_build : Set global version if not provided] **********************************************************************************
skipping: [localhost]

TASK [image_build : Verify awx-logos directory exists for official install] **************************************************************
skipping: [localhost]

TASK [image_build : Copy logos for inclusion in sdist] ***********************************************************************************
skipping: [localhost]

TASK [image_build : Set sdist file name] *************************************************************************************************
skipping: [localhost]

TASK [image_build : AWX Distribution] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stat distribution file] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Clean distribution] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Build sdist builder image] *******************************************************************************************
skipping: [localhost]

TASK [image_build : Build AWX distribution using container] ******************************************************************************
skipping: [localhost]

TASK [image_build : Build AWX distribution locally] **************************************************************************************
skipping: [localhost]

TASK [image_build : Set docker build base path] ******************************************************************************************
skipping: [localhost]

TASK [image_build : Set awx_web image name] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Set awx_task image name] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Ensure directory exists] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage sdist] *********************************************************************************************************
skipping: [localhost]

TASK [image_build : Template web Dockerfile] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Template task Dockerfile] ********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage launch_awx] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage launch_awx_task] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage nginx.conf] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage supervisor.conf] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage supervisor_task.conf] ******************************************************************************************
skipping: [localhost]

TASK [image_build : Stage settings.py] ***************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage requirements] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage config watcher] ************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage Makefile] ******************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage ansible repo] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage ansible repo key] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Build base web image] ************************************************************************************************
skipping: [localhost]

TASK [image_build : Build base task image] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Tag task and web images as latest] ***********************************************************************************
skipping: [localhost]

TASK [image_build : Clean docker base directory] *****************************************************************************************
skipping: [localhost]

TASK [image_push : Authenticate with Docker registry if registry password given] *********************************************************
skipping: [localhost]

TASK [image_push : Remove web image] *****************************************************************************************************
skipping: [localhost]

TASK [image_push : Remove task image] ****************************************************************************************************
skipping: [localhost]

TASK [image_push : Tag and push web image to registry] ***********************************************************************************
skipping: [localhost]

TASK [image_push : Tag and push task image to registry] **********************************************************************************
skipping: [localhost]

TASK [image_push : Set full image path for Registry] *************************************************************************************
skipping: [localhost]

TASK [kubernetes : fail] *****************************************************************************************************************
skipping: [localhost]

TASK [kubernetes : include_tasks] ********************************************************************************************************
skipping: [localhost] => (item=openshift_auth.yml) 
skipping: [localhost] => (item=openshift.yml) 

TASK [kubernetes : include_tasks] ********************************************************************************************************
skipping: [localhost] => (item=kubernetes_auth.yml) 
skipping: [localhost] => (item=kubernetes.yml) 

TASK [kubernetes : Use kubectl or oc] ****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : set_fact] *************************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Record deployment size] ***********************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set expected post-deployment Replicas value] **************************************************************************
skipping: [localhost]

TASK [kubernetes : Delete existing Deployment] *******************************************************************************************
skipping: [localhost]

TASK [kubernetes : Get Postgres Service Detail] ******************************************************************************************
skipping: [localhost]

TASK [kubernetes : Template PostgreSQL Deployment (OpenShift)] ***************************************************************************
skipping: [localhost]

TASK [kubernetes : Deploy and Activate Postgres (OpenShift)] *****************************************************************************
skipping: [localhost]

TASK [kubernetes : Deploy and Activate Postgres (Kubernetes)] ****************************************************************************
skipping: [localhost]

TASK [kubernetes : Set postgresql hostname to helm package service (Kubernetes)] *********************************************************
skipping: [localhost]

TASK [kubernetes : Wait for Postgres to activate] ****************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set task image name] **************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set web image name] ***************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Render deployment templates] ******************************************************************************************
skipping: [localhost] => (item=None) 
skipping: [localhost] => (item=None) 
skipping: [localhost] => (item=None) 
skipping: [localhost]

TASK [kubernetes : Apply Deployment] *****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Delete any existing management pod] ***********************************************************************************
skipping: [localhost]

TASK [kubernetes : Template management pod] **********************************************************************************************
skipping: [localhost]

TASK [kubernetes : Create management pod] ************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Wait for management pod to start] *************************************************************************************
skipping: [localhost]

TASK [kubernetes : Migrate database] *****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Check for Tower Super users] ******************************************************************************************
skipping: [localhost]

TASK [kubernetes : create django super user if it does not exist] ************************************************************************
skipping: [localhost]

TASK [kubernetes : update django super user password] ************************************************************************************
skipping: [localhost]

TASK [kubernetes : Create the default organization if it is needed.] *********************************************************************
skipping: [localhost]

TASK [kubernetes : Delete management pod] ************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Scale up deployment] **************************************************************************************************
skipping: [localhost]

TASK [local_docker : Export Docker web image if it isnt local and there isnt a registry defined] *****************************************
skipping: [localhost]

TASK [local_docker : Export Docker task image if it isnt local and there isnt a registry defined] ****************************************
skipping: [localhost]

TASK [local_docker : Set docker base path] ***********************************************************************************************
skipping: [localhost]

TASK [local_docker : Ensure directory exists] ********************************************************************************************
skipping: [localhost]

TASK [local_docker : Copy web image to docker execution] *********************************************************************************
skipping: [localhost]

TASK [local_docker : Copy task image to docker execution] ********************************************************************************
skipping: [localhost]

TASK [local_docker : Load web image] *****************************************************************************************************
skipping: [localhost]

TASK [local_docker : Load task image] ****************************************************************************************************
skipping: [localhost]

TASK [local_docker : Set full image path for local install] ******************************************************************************
skipping: [localhost]

TASK [local_docker : Set DockerHub Image Paths] ******************************************************************************************
ok: [localhost]

TASK [local_docker : Activate postgres container] ****************************************************************************************
changed: [localhost]

TASK [local_docker : Activate rabbitmq container] ****************************************************************************************
changed: [localhost]

TASK [local_docker : Activate memcached container] ***************************************************************************************
changed: [localhost]

TASK [local_docker : Wait for postgres and rabbitmq to activate] *************************************************************************
Pausing for 15 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [localhost]

TASK [local_docker : Set properties without postgres for awx_web] ************************************************************************
skipping: [localhost]

TASK [local_docker : Set properties with postgres for awx_web] ***************************************************************************
ok: [localhost]

TASK [local_docker : Set properties without postgres for awx_task] ***********************************************************************
skipping: [localhost]

TASK [local_docker : Set properties with postgres for awx_task] **************************************************************************
ok: [localhost]

TASK [local_docker : Activate AWX Web Container] *****************************************************************************************
 [WARNING]: Non-string value found for env option. Ambiguous env options should be wrapped in quotes to avoid YAML parsing. This will
become an error in Ansible 2.8. Key: DATABASE_PORT; value will be treated as: 5432

changed: [localhost]

TASK [local_docker : Update CA trust in awx_web container] *******************************************************************************
changed: [localhost]

TASK [local_docker : Activate AWX Task Container] ****************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "Error pulling image ansible/awx_task:3.0.1 - 500 Server Error: Internal Server Error (\"{\"message\":\"Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\"}\")"}
	to retry, use: --limit @/root/awx/github/awx/installer/install.retry

PLAY RECAP *******************************************************************************************************************************
localhost                  : ok=12   changed=5    unreachable=0    failed=1   

[root@awxoel1 installer]# ansible-playbook -i inventory install.yml

PLAY [Build and deploy AWX] **************************************************************************************************************

TASK [check_vars : include_tasks] ********************************************************************************************************
skipping: [localhost]

TASK [check_vars : include_tasks] ********************************************************************************************************
included: /root/awx/github/awx/installer/roles/check_vars/tasks/check_docker.yml for localhost

TASK [check_vars : postgres_data_dir should be defined] **********************************************************************************
ok: [localhost] => {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [check_vars : host_port should be defined] ******************************************************************************************
ok: [localhost] => {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [image_build : Set global version if not provided] **********************************************************************************
skipping: [localhost]

TASK [image_build : Verify awx-logos directory exists for official install] **************************************************************
skipping: [localhost]

TASK [image_build : Copy logos for inclusion in sdist] ***********************************************************************************
skipping: [localhost]

TASK [image_build : Set sdist file name] *************************************************************************************************
skipping: [localhost]

TASK [image_build : AWX Distribution] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stat distribution file] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Clean distribution] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Build sdist builder image] *******************************************************************************************
skipping: [localhost]

TASK [image_build : Build AWX distribution using container] ******************************************************************************
skipping: [localhost]

TASK [image_build : Build AWX distribution locally] **************************************************************************************
skipping: [localhost]

TASK [image_build : Set docker build base path] ******************************************************************************************
skipping: [localhost]

TASK [image_build : Set awx_web image name] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Set awx_task image name] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Ensure directory exists] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage sdist] *********************************************************************************************************
skipping: [localhost]

TASK [image_build : Template web Dockerfile] *********************************************************************************************
skipping: [localhost]

TASK [image_build : Template task Dockerfile] ********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage launch_awx] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage launch_awx_task] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage nginx.conf] ****************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage supervisor.conf] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Stage supervisor_task.conf] ******************************************************************************************
skipping: [localhost]

TASK [image_build : Stage settings.py] ***************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage requirements] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage config watcher] ************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage Makefile] ******************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage ansible repo] **************************************************************************************************
skipping: [localhost]

TASK [image_build : Stage ansible repo key] **********************************************************************************************
skipping: [localhost]

TASK [image_build : Build base web image] ************************************************************************************************
skipping: [localhost]

TASK [image_build : Build base task image] ***********************************************************************************************
skipping: [localhost]

TASK [image_build : Tag task and web images as latest] ***********************************************************************************
skipping: [localhost]

TASK [image_build : Clean docker base directory] *****************************************************************************************
skipping: [localhost]

TASK [image_push : Authenticate with Docker registry if registry password given] *********************************************************
skipping: [localhost]

TASK [image_push : Remove web image] *****************************************************************************************************
skipping: [localhost]

TASK [image_push : Remove task image] ****************************************************************************************************
skipping: [localhost]

TASK [image_push : Tag and push web image to registry] ***********************************************************************************
skipping: [localhost]

TASK [image_push : Tag and push task image to registry] **********************************************************************************
skipping: [localhost]

TASK [image_push : Set full image path for Registry] *************************************************************************************
skipping: [localhost]

TASK [kubernetes : fail] *****************************************************************************************************************
skipping: [localhost]

TASK [kubernetes : include_tasks] ********************************************************************************************************
skipping: [localhost] => (item=openshift_auth.yml) 
skipping: [localhost] => (item=openshift.yml) 

TASK [kubernetes : include_tasks] ********************************************************************************************************
skipping: [localhost] => (item=kubernetes_auth.yml) 
skipping: [localhost] => (item=kubernetes.yml) 

TASK [kubernetes : Use kubectl or oc] ****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : set_fact] *************************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Record deployment size] ***********************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set expected post-deployment Replicas value] **************************************************************************
skipping: [localhost]

TASK [kubernetes : Delete existing Deployment] *******************************************************************************************
skipping: [localhost]

TASK [kubernetes : Get Postgres Service Detail] ******************************************************************************************
skipping: [localhost]

TASK [kubernetes : Template PostgreSQL Deployment (OpenShift)] ***************************************************************************
skipping: [localhost]

TASK [kubernetes : Deploy and Activate Postgres (OpenShift)] *****************************************************************************
skipping: [localhost]

TASK [kubernetes : Deploy and Activate Postgres (Kubernetes)] ****************************************************************************
skipping: [localhost]

TASK [kubernetes : Set postgresql hostname to helm package service (Kubernetes)] *********************************************************
skipping: [localhost]

TASK [kubernetes : Wait for Postgres to activate] ****************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set task image name] **************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Set web image name] ***************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Render deployment templates] ******************************************************************************************
skipping: [localhost] => (item=None) 
skipping: [localhost] => (item=None) 
skipping: [localhost] => (item=None) 
skipping: [localhost]

TASK [kubernetes : Apply Deployment] *****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Delete any existing management pod] ***********************************************************************************
skipping: [localhost]

TASK [kubernetes : Template management pod] **********************************************************************************************
skipping: [localhost]

TASK [kubernetes : Create management pod] ************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Wait for management pod to start] *************************************************************************************
skipping: [localhost]

TASK [kubernetes : Migrate database] *****************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Check for Tower Super users] ******************************************************************************************
skipping: [localhost]

TASK [kubernetes : create django super user if it does not exist] ************************************************************************
skipping: [localhost]

TASK [kubernetes : update django super user password] ************************************************************************************
skipping: [localhost]

TASK [kubernetes : Create the default organization if it is needed.] *********************************************************************
skipping: [localhost]

TASK [kubernetes : Delete management pod] ************************************************************************************************
skipping: [localhost]

TASK [kubernetes : Scale up deployment] **************************************************************************************************
skipping: [localhost]

TASK [local_docker : Export Docker web image if it isnt local and there isnt a registry defined] *****************************************
skipping: [localhost]

TASK [local_docker : Export Docker task image if it isnt local and there isnt a registry defined] ****************************************
skipping: [localhost]

TASK [local_docker : Set docker base path] ***********************************************************************************************
skipping: [localhost]

TASK [local_docker : Ensure directory exists] ********************************************************************************************
skipping: [localhost]

TASK [local_docker : Copy web image to docker execution] *********************************************************************************
skipping: [localhost]

TASK [local_docker : Copy task image to docker execution] ********************************************************************************
skipping: [localhost]

TASK [local_docker : Load web image] *****************************************************************************************************
skipping: [localhost]

TASK [local_docker : Load task image] ****************************************************************************************************
skipping: [localhost]

TASK [local_docker : Set full image path for local install] ******************************************************************************
skipping: [localhost]

TASK [local_docker : Set DockerHub Image Paths] ******************************************************************************************
ok: [localhost]

TASK [local_docker : Activate postgres container] ****************************************************************************************
ok: [localhost]

TASK [local_docker : Activate rabbitmq container] ****************************************************************************************
ok: [localhost]

TASK [local_docker : Activate memcached container] ***************************************************************************************
ok: [localhost]

TASK [local_docker : Wait for postgres and rabbitmq to activate] *************************************************************************
skipping: [localhost]

TASK [local_docker : Set properties without postgres for awx_web] ************************************************************************
skipping: [localhost]

TASK [local_docker : Set properties with postgres for awx_web] ***************************************************************************
ok: [localhost]

TASK [local_docker : Set properties without postgres for awx_task] ***********************************************************************
skipping: [localhost]

TASK [local_docker : Set properties with postgres for awx_task] **************************************************************************
ok: [localhost]

TASK [local_docker : Activate AWX Web Container] *****************************************************************************************
 [WARNING]: Non-string value found for env option. Ambiguous env options should be wrapped in quotes to avoid YAML parsing. This will
become an error in Ansible 2.8. Key: DATABASE_PORT; value will be treated as: 5432

ok: [localhost]

TASK [local_docker : Update CA trust in awx_web container] *******************************************************************************
skipping: [localhost]

TASK [local_docker : Activate AWX Task Container] ****************************************************************************************
changed: [localhost]

TASK [local_docker : Update CA trust in awx_task container] ******************************************************************************
changed: [localhost]

TASK [local_docker : Create /var/lib/awx directory] **************************************************************************************
skipping: [localhost]

TASK [local_docker : Create docker-compose.yml file] *************************************************************************************
skipping: [localhost]

TASK [local_docker : Start the containers] ***********************************************************************************************
skipping: [localhost]

TASK [local_docker : Update CA trust in awx_web container] *******************************************************************************
skipping: [localhost]

TASK [local_docker : Update CA trust in awx_task container] ******************************************************************************
skipping: [localhost]

PLAY RECAP *******************************************************************************************************************************
localhost                  : ok=12   changed=2    unreachable=0    failed=0  


- PIP SHOW DOCKER-PY
[root@awxoel1 ~]#  pip show docker-py
---
Metadata-Version: 2.0
Name: docker-py
Version: 1.10.6
Summary: Python client for Docker.
Home-page: https://github.com/docker/docker-py/
Author: Joffrey F
Author-email: joffrey@docker.com
Installer: pip
License: UNKNOWN
Location: /usr/lib/python2.7/site-packages
Requires: websocket-client, requests, backports.ssl-match-hostname, ipaddress, six, docker-pycreds
Classifiers:
  Development Status :: 4 - Beta
  Environment :: Other Environment
  Intended Audience :: Developers
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 2
  Programming Language :: Python :: 2.6
  Programming Language :: Python :: 2.7
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.3
  Programming Language :: Python :: 3.4
  Programming Language :: Python :: 3.5
  Topic :: Utilities
  License :: OSI Approved :: Apache Software License
You are using pip version 8.1.2, however version 19.0.3 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.

=================
SSL - with nginx
=================
https://techbloc.net/archives/2389

=================
APPENDIX
=================

----------------
EPEL RELEASE
----------------
yum install epel-release
 
 OR
 
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
RHEL 6/CentOS 6/etc:
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
RHEL 5/CentOS 5/etc:
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm
Once you’ve downloaded the EPEL rpm file for your OS version, you can now install the EPEL repository. To install the EPEL rpm run:
yum install ./epel-release-latest-*.noarch.rpm

----------------
PIP
----------------
yum -y install python-pip

